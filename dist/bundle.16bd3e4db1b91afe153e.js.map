{"version":3,"file":"bundle.16bd3e4db1b91afe153e.js","mappings":"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","sources":["webpack://2048/./node_modules/events/events.js","webpack://2048/webpack/bootstrap","webpack://2048/./src/utils.ts","webpack://2048/./src/controller.ts","webpack://2048/./src/board.ts","webpack://2048/./src/storage.ts","webpack://2048/./src/renderer.ts","webpack://2048/./src/game.ts","webpack://2048/./src/index.ts"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export const randomize = (min, max, cfg) => {\n    const value = Math.floor(Math.random() * (max - min + 1) + min);\n    if (!(cfg === null || cfg === void 0 ? void 0 : cfg.exclude.includes(value))) {\n        return value;\n    }\n    return randomize(min, max, cfg);\n};\nexport const isPowerOfTwo = (value) => {\n    return (Math.log(value) / Math.log(2)) % 1 === 0;\n};\nexport const range = function* (fromOrTo, to, step = 1) {\n    let start = to !== undefined ? fromOrTo : 0;\n    let end = to !== undefined ? to : fromOrTo;\n    const reversed = Math.sign(step) < 0;\n    if (reversed) {\n        [start, end] = [end - 1, start - 1];\n    }\n    for (let i = start; reversed ? i > end : i < end; i += step) {\n        yield i;\n    }\n};\n/**\n * Генерирует короткий ID\n */\nexport const generateId = () => \"_\" + Math.random().toString(36).slice(2, 9);\nexport const insertChildAtIndex = (parent, child, index) => {\n    if (!index)\n        index = 0;\n    if (index >= parent.children.length) {\n        parent.appendChild(child);\n    }\n    else {\n        parent.insertBefore(child, parent.children[index]);\n    }\n};\nexport const calcCoordsByIndex = (index, boardSize) => {\n    const x = index % boardSize;\n    const y = Math.floor(index / boardSize);\n    return { x, y };\n};\nexport const calcIndexByCoords = (coords, boardSize) => {\n    return coords.x + coords.y * boardSize;\n};\nexport function* matrixIterator(matrix, pivotAxis = \"x\", reversed) {\n    const size = matrix.length;\n    for (const a1 of range(size)) {\n        for (const a2 of range(0, size, reversed ? -1 : 1)) {\n            const [x, y] = pivotAxis === \"x\" ? [a2, a1] : [a1, a2];\n            const value = matrix[y][x];\n            const index = calcIndexByCoords({ x, y }, size);\n            yield { value, x, y, index };\n        }\n    }\n}\nexport const isObject = (value) => typeof value === \"object\" && value != null;\nexport const deepEqual = (a, b) => {\n    // P1\n    if (typeof a !== typeof b) {\n        return false;\n    }\n    if (Object.is(a, b)) {\n        return true;\n    }\n    // P2\n    if (!isObject(a) || !isObject(b)) {\n        return false;\n    }\n    // P3\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    return keysA.every((key) => deepEqual(a[key], b[key]));\n};\nexport const sleep = (n) => new Promise((res) => setTimeout(res, n));\n","export var Command;\n(function (Command) {\n    Command[Command[\"LEFT\"] = 0] = \"LEFT\";\n    Command[Command[\"UP\"] = 1] = \"UP\";\n    Command[Command[\"RIGHT\"] = 2] = \"RIGHT\";\n    Command[Command[\"DOWN\"] = 3] = \"DOWN\";\n})(Command || (Command = {}));\nexport class Controller {\n    constructor(boardElement) {\n        this.boardElement = boardElement;\n        this.KEY_MAP = {\n            w: Command.UP,\n            ArrowUp: Command.UP,\n            s: Command.DOWN,\n            ArrowDown: Command.DOWN,\n            a: Command.LEFT,\n            ArrowLeft: Command.LEFT,\n            d: Command.RIGHT,\n            ArrowRight: Command.RIGHT,\n        };\n    }\n    listenCommand(handler) {\n        const keysUnsubscribe = this.keysListen(handler);\n        const gestureUnsubscribe = this.gestureListen(handler);\n        return {\n            unsubscribe: () => {\n                keysUnsubscribe();\n                gestureUnsubscribe();\n            },\n        };\n    }\n    keysListen(handler) {\n        const listener = (event) => {\n            const controlledKey = this.KEY_MAP[event.key];\n            if (controlledKey !== undefined)\n                handler(controlledKey, event);\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }\n    gestureListen(handler) {\n        let touchstartX = 0;\n        let touchstartY = 0;\n        const touchStartListener = (e) => {\n            touchstartX = e.changedTouches[0].screenX;\n            touchstartY = e.changedTouches[0].screenY;\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        };\n        const touchEndListener = (e) => {\n            const touchendX = e.changedTouches[0].screenX;\n            const touchendY = e.changedTouches[0].screenY;\n            const diffX = Math.abs(touchendX - touchstartX);\n            const diffY = Math.abs(touchendY - touchstartY);\n            if (diffX < 10 && diffY < 10) {\n                return;\n            }\n            if (diffX > diffY) {\n                // horizontal swipe\n                handler(touchendX < touchstartX ? Command.LEFT : Command.RIGHT, e);\n            }\n            else {\n                // vertical swipe\n                handler(touchendY < touchstartY ? Command.UP : Command.DOWN, e);\n            }\n        };\n        this.boardElement.addEventListener(\"touchstart\", touchStartListener, { passive: true });\n        this.boardElement.addEventListener(\"touchend\", touchEndListener, { passive: true });\n        return () => {\n            this.boardElement.removeEventListener(\"touchstart\", touchStartListener);\n            this.boardElement.removeEventListener(\"touchend\", touchEndListener);\n        };\n    }\n}\n","import { calcCoordsByIndex, calcIndexByCoords, generateId, isPowerOfTwo, matrixIterator, randomize, range } from \"./utils\";\nimport { EventEmitter } from \"events\";\nexport class Board {\n    constructor(boardSize) {\n        this.boardSize = boardSize;\n        this.state = { cells: [] };\n        this.ee = new EventEmitter();\n    }\n    onUpdate(handler) {\n        this.ee.addListener(Board.UPDATE_EVENT, (prevState) => handler(this.state, prevState));\n    }\n    onCellsMerge(handler) {\n        this.ee.addListener(Board.MERGE_EVENT, (cell) => handler(cell));\n    }\n    restore(cells) {\n        this.setState({ cells });\n    }\n    reset() {\n        this.setState({ cells: [] });\n    }\n    move(axis, step) {\n        var _a;\n        const boardSize = this.boardSize;\n        let hasMoved = false;\n        const mtx = this.getBoardMatrix();\n        const mergedKeys = new Set();\n        for (const { value: cell, x, y } of matrixIterator(mtx, axis, Math.sign(step) > 0)) {\n            if (!cell)\n                continue; // skip empty values\n            const canMove = (pointer) => (Math.sign(step) > 0 ? pointer < boardSize - 1 : pointer > 0);\n            const initialPointer = axis === \"x\" ? x : y;\n            // Каждую непустую ячейку мы двигаем по оси, до тех пор пока:\n            // - Доходим до края\n            // - Доходим до ячейки с таким же значением (необходимо слить соседнии ячейки и пометить ее, тк складывать можно только 1 раз)\n            for (let p = initialPointer; canMove(p); p += step) {\n                const pos = axis === \"x\" ? { y, x: p } : { y: p, x };\n                const sibPos = axis === \"x\" ? { y, x: p + step } : { y: p + step, x };\n                const sibling = (_a = mtx[sibPos.y]) === null || _a === void 0 ? void 0 : _a[sibPos.x];\n                if (sibling === null) {\n                    // соседняя ячейка свободна - передвигаем текущую клетку\n                    [mtx[pos.y][pos.x], mtx[sibPos.y][sibPos.x]] = [mtx[sibPos.y][sibPos.x], mtx[pos.y][pos.x]];\n                    hasMoved = true;\n                    continue;\n                }\n                if (sibling.value === cell.value && !mergedKeys.has(cell.key) && !mergedKeys.has(sibling.key)) {\n                    // merge values (using sib cell) and mark it as merged\n                    cell.doubleValue();\n                    mtx[sibPos.y][sibPos.x] = cell;\n                    mtx[pos.y][pos.x] = null;\n                    mergedKeys.add(cell.key);\n                    hasMoved = true;\n                    break;\n                }\n                break;\n            }\n        }\n        if (hasMoved) {\n            // Конвертируем матрицу в массив ячеек и синхронизируем (координаты)\n            const cells = Array.from(matrixIterator(mtx))\n                .filter(({ value }) => value !== null)\n                .map(({ value, x, y }) => (value === null || value === void 0 ? void 0 : value.setCoords({ x, y }), value));\n            mergedKeys.forEach((mergedKey) => {\n                this.ee.emit(Board.MERGE_EVENT, cells.find((c) => c.key === mergedKey));\n            });\n            this.setState({ cells });\n        }\n        return hasMoved;\n    }\n    setState(patch) {\n        const prevState = this.state;\n        this.state = Object.assign(Object.assign({}, prevState), patch);\n        this.ee.emit(Board.UPDATE_EVENT, prevState);\n    }\n    getBoardMatrix() {\n        var _a;\n        const boardSize = this.boardSize;\n        const cells = this.state.cells;\n        const mtx = Array.from({ length: boardSize }).map(() => Array.from({ length: boardSize }));\n        for (const x of range(mtx.length)) {\n            for (const y of range(mtx.length)) {\n                mtx[y][x] = (_a = cells.find((cell) => cell.x === x && cell.y === y)) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return mtx;\n    }\n    spawnCells(count) {\n        const boardSize = this.boardSize;\n        const cells = [...this.state.cells];\n        const createSpawnCell = () => {\n            const INITIAL_VALUE = 2;\n            const filledIndexes = cells.map((cell) => calcIndexByCoords(cell.coords, boardSize));\n            const randomIndex = randomize(0, Math.pow(boardSize, 2) - 1, { exclude: filledIndexes });\n            const coords = calcCoordsByIndex(randomIndex, boardSize);\n            return new Cell(coords, INITIAL_VALUE);\n        };\n        Array.from(range(count)).forEach(() => cells.push(createSpawnCell()));\n        this.setState({ cells });\n    }\n}\nBoard.UPDATE_EVENT = \"STATE_CHANGED_EVENT\";\nBoard.MERGE_EVENT = \"CELLS_MERGE_EVENT\";\nexport class Cell {\n    constructor(coords, value) {\n        this.value = value;\n        this.key = null;\n        this.x = null;\n        this.y = null;\n        this.validateValue(value);\n        this.x = coords.x;\n        this.y = coords.y;\n        this.key = generateId();\n    }\n    doubleValue() {\n        // @ts-ignore\n        this.value = this.value * 2;\n    }\n    setCoords(coords) {\n        // @ts-ignore\n        this.x = coords.x;\n        // @ts-ignore\n        this.y = coords.y;\n    }\n    get coords() {\n        return { x: this.x, y: this.y };\n    }\n    validateValue(value) {\n        if (!isPowerOfTwo(value)) {\n            throw TypeError(\"Value must be a power of 2\");\n        }\n    }\n}\n","export class Storage {\n    constructor(key, transforms) {\n        this.key = key;\n        this.transforms = transforms;\n    }\n    save(_data) {\n        var _a;\n        const data = Object.assign({}, _data);\n        Object.entries((_a = this.transforms) !== null && _a !== void 0 ? _a : []).forEach(([key, [encode]]) => {\n            if (data[key]) {\n                data[key] = encode(data[key]);\n            }\n        });\n        localStorage.setItem(this.key, JSON.stringify(data));\n    }\n    load() {\n        var _a;\n        const parsed = this.loadJson();\n        if (!parsed) {\n            return null;\n        }\n        Object.entries((_a = this.transforms) !== null && _a !== void 0 ? _a : []).forEach(([key, [, decode]]) => {\n            if (parsed[key]) {\n                parsed[key] = decode(parsed[key]);\n            }\n        });\n        return parsed;\n    }\n    clear() {\n        localStorage.removeItem(this.key);\n    }\n    loadJson() {\n        try {\n            return JSON.parse(localStorage.getItem(this.key));\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n","import { range } from \"./utils\";\n/**\n * Отрисовка происходит в несколько этапов\n * Первоначально мы рисуем все клетки в обычном порядке, для каждой клетки мы должны хранить, атрибут с ее ключом\n * При перерисовке мы должны вычислить, изначальный порядок относительно каждой клетки, и применить transform, к тем чей\n * порядок изменился, а также обновить все значения (value etc)\n *\n * При перерисовке, мы также должны удалить неиспользуемые элементы\n */\nexport class Renderer {\n    constructor(boardElement, boardSize) {\n        this.boardElement = boardElement;\n        this.boardSize = boardSize;\n        this.renderCleanup = [];\n        this.boardGridElement = null;\n        this.boardSceneElement = null;\n        this.createHooks = () => {\n            this.renderCleanup.forEach((cleanup) => cleanup());\n            this.renderCleanup = [];\n            const afterTransition = (callback) => {\n                const timerID = window.setTimeout(callback, Renderer.MOVE_TRANSITION_MS);\n                this.renderCleanup.push(() => clearTimeout(timerID));\n            };\n            return { afterTransition };\n        };\n        this.boardGridElement = boardElement.querySelector(\".board-grid\");\n        this.boardSceneElement = boardElement.querySelector(\".board-scene\");\n    }\n    static getCSSVar(name) {\n        return getComputedStyle(document.documentElement).getPropertyValue(name);\n    }\n    static setCSSVar(name, value) {\n        return document.documentElement.style.setProperty(name, value);\n    }\n    mount() {\n        const cellSizeCSS = `calc(var(${Renderer.BOARD_SIZE_VAR}) / ${this.boardSize})`;\n        const cellGapCSS = `calc(var(${Renderer.CELL_SIZE_VAR}) * 0.03) `;\n        Renderer.setCSSVar(Renderer.CELL_SIZE_VAR, cellSizeCSS);\n        Renderer.setCSSVar(Renderer.CELL_GAP_VAR, cellGapCSS);\n        const createEmptyCell = () => {\n            const element = document.createElement(\"div\");\n            element.classList.add(\"cell\", \"cell-empty\");\n            return element;\n        };\n        this.boardGridElement.replaceChildren(...Array.from(range(Math.pow(this.boardSize, 2))).map(() => createEmptyCell()));\n    }\n    static createCellElement(cell) {\n        return Renderer.updateCellElement(cell, document.createElement(\"div\"));\n    }\n    static updateCellElement(cell, element) {\n        element.className = \"\"; // cleanup all classNames before\n        element.classList.add(\"cell\", \"cell-filled\", `cell-${cell.value}`);\n        element.setAttribute(\"data-key\", cell.key);\n        const shiftStep = `calc(var(${Renderer.CELL_SIZE_VAR}) + var(${Renderer.CELL_GAP_VAR}) * 0.25)`;\n        const xShift = `calc(${shiftStep} * ${cell.x})`;\n        const yShift = `calc(${shiftStep} * ${cell.y})`;\n        element.style.transform = \"\";\n        element.style.top = yShift;\n        element.style.left = xShift;\n        element.innerHTML = String(cell.value);\n        return element;\n    }\n    getSceneCellElements() {\n        return Array.from(this.boardElement.querySelectorAll(\".board-scene .cell\"));\n    }\n    render(cells) {\n        const hooks = this.createHooks();\n        const cellElements = this.getSceneCellElements();\n        const currentKeys = new Set(cells.map((c) => c.key));\n        const getDataKey = (el) => String(el.getAttribute(\"data-key\"));\n        const getElementByKey = (key) => cellElements.find((el) => getDataKey(el) === key);\n        // const getCellByKey = (key: string) => cells.find((cell) => cell.key === key);\n        if (!cellElements.length) {\n            this.boardSceneElement.replaceChildren(...cells.map((cell) => Renderer.createCellElement(cell)));\n            return;\n        }\n        // creating new cells and updating an existed\n        for (const cell of cells) {\n            const element = getElementByKey(cell.key);\n            if (!element) {\n                // create new element\n                const newElement = Renderer.createCellElement(cell);\n                hooks.afterTransition(() => this.boardSceneElement.append(newElement));\n                continue;\n            }\n            Renderer.updateCellElement(cell, element);\n        }\n        const removedElements = cellElements.filter((el) => !currentKeys.has(getDataKey(el)));\n        for (const removedEl of removedElements) {\n            removedEl.remove();\n        }\n    }\n}\nRenderer.CELL_GAP_VAR = \"--cell-gap\";\nRenderer.CELL_SIZE_VAR = \"--cell-size\";\nRenderer.BOARD_SIZE_VAR = \"--board-size\";\nRenderer.MOVE_TRANSITION_MS = 100;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Board, Cell } from \"./board\";\nimport { Command, Controller } from \"./controller\";\nimport { Storage } from \"./storage\";\nimport { Renderer } from \"./renderer\";\nimport { sleep } from \"./utils\";\nexport class Game {\n    constructor(cfg) {\n        this.cfg = cfg;\n        this.storage = new Storage(\"game-state.v1\", {\n            cells: [\n                (cells) => cells === null || cells === void 0 ? void 0 : cells.map(({ x, y, value }) => ({ x, y, value })),\n                (parsed) => parsed === null || parsed === void 0 ? void 0 : parsed.map(({ x, y, value }) => new Cell({ x, y }, value)),\n            ],\n        });\n    }\n    get state() {\n        const persisted = this.storage.load();\n        const DEFAULT_STATE = {\n            boardSize: this.cfg.boardSize,\n            cells: [],\n            score: 0,\n            afterPartyMode: false,\n        };\n        if (this._state) {\n            return Object.assign(Object.assign({}, DEFAULT_STATE), this._state);\n        }\n        if (persisted) {\n            return persisted;\n        }\n        return DEFAULT_STATE;\n    }\n    setState(patch) {\n        const newState = Object.assign(Object.assign({}, this.state), patch);\n        this.storage.save(newState);\n        this._state = newState;\n    }\n    bootstrap() {\n        const resetButton = document.getElementById(\"reset-button\");\n        const currentScoreValue = document.getElementById(\"current-score-value\");\n        const controller = new Controller(this.cfg.boardElement);\n        const renderer = new Renderer(this.cfg.boardElement, this.state.boardSize);\n        const board = new Board(this.state.boardSize);\n        const moveHandler = {\n            [Command.UP]: () => board.move(\"y\", -1),\n            [Command.DOWN]: () => board.move(\"y\", 1),\n            [Command.LEFT]: () => board.move(\"x\", -1),\n            [Command.RIGHT]: () => board.move(\"x\", 1),\n        };\n        const reset = () => {\n            this.setState({ cells: [], score: 0, afterPartyMode: false });\n            board.reset();\n            board.spawnCells(2);\n            currentScoreValue.innerHTML = String(this.state.score);\n        };\n        board.onCellsMerge((cell) => {\n            const currentScore = this.state.score + cell.value;\n            this.setState({ score: currentScore });\n            currentScoreValue.innerHTML = String(currentScore);\n        });\n        board.onUpdate(({ cells }) => {\n            renderer.render(cells);\n            if (this.isGameOver(cells)) {\n                return locked(() => sleep(300).then(() => {\n                    alert(\"Game Over!\");\n                    reset();\n                }));\n            }\n            if (this.isWin(cells) && !this.state.afterPartyMode) {\n                return locked(() => sleep(300).then(() => {\n                    const afterPartyMode = confirm(\"You just reached the 2048 🎉🎉🎉. Do you want to continue?\");\n                    if (afterPartyMode) {\n                        this.setState({ afterPartyMode: true });\n                        return;\n                    }\n                    reset();\n                }));\n            }\n            this.setState({ cells });\n        });\n        resetButton.addEventListener(\"click\", () => reset());\n        controller.listenCommand((key) => {\n            const move = moveHandler[key];\n            const hasMoved = move();\n            // spawn cell if has moved\n            if (hasMoved)\n                board.spawnCells(1);\n        });\n        if (this.state.cells.length > 0) {\n            board.restore(this.state.cells);\n        }\n        else {\n            reset();\n        }\n        renderer.mount();\n        currentScoreValue.innerHTML = String(this.state.score);\n    }\n    isWin(cells) {\n        const GOAL = 2048;\n        return cells.some((cell) => cell.value === GOAL);\n    }\n    isGameOver(cells) {\n        const getCoordsKey = (coords) => `${coords.x}x${coords.y}`;\n        const noEmptyCells = cells.length === Math.pow(this.cfg.boardSize, 2);\n        if (!noEmptyCells) {\n            return false;\n        }\n        const cellsMap = cells.reduce((acc, cell) => ((acc[getCoordsKey(cell.coords)] = cell), acc), {});\n        return cells.every((cell) => {\n            const siblings = [\n                cellsMap[getCoordsKey({ x: cell.x + 1, y: cell.y })],\n                cellsMap[getCoordsKey({ x: cell.x - 1, y: cell.y })],\n                cellsMap[getCoordsKey({ x: cell.x, y: cell.y + 1 })],\n                cellsMap[getCoordsKey({ x: cell.x, y: cell.y - 1 })],\n            ];\n            return siblings.every((sib) => !sib || sib.value !== cell.value);\n        });\n    }\n}\nlet isLocked = false;\nconst locked = (callback) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!isLocked) {\n        isLocked = true;\n        const res = yield callback();\n        isLocked = false;\n        return res;\n    }\n});\n","import { Game } from \"./game\";\nconst boardElement = document.getElementById(\"board-root\");\nconst scoreValueElement = document.getElementById(\"score-value\");\nconst game = new Game({\n    scoreValueElement,\n    boardElement,\n    boardSize: 4,\n});\ngame.bootstrap();\n/***********************************/\n/********* SERVICE WORKER **********/\n/***********************************/\n/* Put code here */\n/* Only register a service worker if it's supported */\nif (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.register(\"./service-worker.js\");\n}\n"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","module","exports","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","randomize","min","max","cfg","Math","floor","random","exclude","includes","range","fromOrTo","to","step","start","end","reversed","sign","calcIndexByCoords","coords","boardSize","x","y","matrixIterator","matrix","pivotAxis","size","a1","a2","sleep","res","setTimeout","Command","Board","constructor","cells","ee","onUpdate","UPDATE_EVENT","prevState","onCellsMerge","MERGE_EVENT","cell","restore","setState","reset","move","axis","_a","hasMoved","mtx","getBoardMatrix","mergedKeys","Set","canMove","pointer","p","pos","sibPos","sibling","has","doubleValue","add","from","filter","map","setCoords","forEach","mergedKey","find","c","patch","assign","spawnCells","createSpawnCell","filledIndexes","calcCoordsByIndex","pow","Cell","validateValue","toString","log","isPowerOfTwo","Controller","boardElement","KEY_MAP","UP","ArrowUp","s","DOWN","ArrowDown","a","LEFT","ArrowLeft","d","RIGHT","ArrowRight","listenCommand","keysUnsubscribe","keysListen","gestureUnsubscribe","gestureListen","unsubscribe","event","controlledKey","document","touchstartX","touchstartY","touchStartListener","e","changedTouches","screenX","screenY","stopPropagation","preventDefault","touchEndListener","touchendX","touchendY","diffX","abs","diffY","passive","Storage","transforms","save","_data","data","entries","encode","localStorage","setItem","JSON","stringify","load","parsed","loadJson","decode","clear","removeItem","parse","getItem","Renderer","renderCleanup","boardGridElement","boardSceneElement","createHooks","cleanup","afterTransition","callback","timerID","window","MOVE_TRANSITION_MS","clearTimeout","querySelector","static","getComputedStyle","documentElement","getPropertyValue","style","setProperty","mount","cellSizeCSS","BOARD_SIZE_VAR","cellGapCSS","CELL_SIZE_VAR","setCSSVar","CELL_GAP_VAR","replaceChildren","element","createElement","classList","createEmptyCell","updateCellElement","className","setAttribute","shiftStep","xShift","yShift","transform","top","left","innerHTML","getSceneCellElements","querySelectorAll","render","hooks","cellElements","currentKeys","getDataKey","el","getAttribute","getElementByKey","createCellElement","newElement","append","removedElements","removedEl","remove","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","rejected","result","done","then","isLocked","locked","getElementById","scoreValueElement","storage","persisted","DEFAULT_STATE","score","afterPartyMode","_state","newState","bootstrap","resetButton","currentScoreValue","controller","renderer","board","moveHandler","currentScore","isGameOver","alert","isWin","confirm","some","getCoordsKey","cellsMap","reduce","acc","every","sib","navigator","serviceWorker","register"],"sourceRoot":""}